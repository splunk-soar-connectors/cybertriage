{
    "appid": "e9c94fb2-31da-43eb-8109-8d5743569e5f",
    "name": "Cyber Triage for SOAR",
    "description": "Initiates a remote endpoint collection to support an investigation using Cyber Triage",
    "type": "endpoint",
    "product_vendor": "Basis Technology",
    "logo": "cybertriage.png",
    "product_name": "Cyber Triage",
    "product_version_regex": "2.1.8",
    "publisher": "Basis Technology",
    "license": "Apache 2.0",
    "app_version": "1.0.4",
    "utctime_updated": "2022-01-07T21:54:17.000000Z",
    "package_name": "phantom_cybertriage",
    "main_module": "cybertriage_connector.py",
    "min_phantom_version": "5.2.0",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "server": {
            "description": "IP or hostname of a Cyber Triage server",
            "data_type": "string",
            "required": true,
            "value_list": [],
            "default": "",
            "order": 0
        },
        "api_key": {
            "description": "API key from a Cyber Triage server",
            "data_type": "password",
            "required": true,
            "order": 1
        },
        "username": {
            "description": "Domain\\Username of an administrative Windows account",
            "data_type": "string",
            "required": true,
            "value_list": [],
            "default": "",
            "order": 2
        },
        "password": {
            "description": "Account password",
            "data_type": "password",
            "required": true,
            "order": 3
        },
        "verify_server_cert": {
            "description": "Verify the Cyber Triage server certificate",
            "data_type": "boolean",
            "required": true,
            "default": false,
            "order": 4
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "scan endpoint",
            "identifier": "scan_endpoint",
            "description": "Initiates a Cyber Triage collection on a remote endpoint",
            "verbose": "This action schedules a collection for a remote endpoint via a Cyber Triage server. The successful run of this action indicates that a collection was scheduled on the Cyber Triage server and does not indicate that a collection was completed. On success the action returns a cyber triage session id which can be used by other actions to query information regarding that session.",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "ip_hostname": {
                    "description": "IP or hostname of the Windows endpoint to collect",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "ip",
                        "host name"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 0
                },
                "malware_scan": {
                    "description": "Send MD5 hashes to external malware analysis service",
                    "data_type": "boolean",
                    "required": true,
                    "primary": false,
                    "default": true,
                    "order": 1
                },
                "file_upload": {
                    "description": "Send unknown files to external malware analysis service. Malware scan must be enabled for file upload to occur",
                    "data_type": "boolean",
                    "required": true,
                    "primary": false,
                    "default": false,
                    "order": 2
                },
                "full_scan": {
                    "description": "Scan entire file system for suspicious files",
                    "data_type": "boolean",
                    "required": true,
                    "primary": false,
                    "default": true,
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.ip_hostname",
                    "data_type": "string",
                    "contains": [
                        "ip",
                        "host name"
                    ],
                    "column_name": "ip_hostname",
                    "column_order": 0,
                    "example_values": [
                        "computer1-vm"
                    ]
                },
                {
                    "data_path": "action_result.parameter.malware_scan",
                    "data_type": "string",
                    "column_name": "malware_scan",
                    "column_order": 3,
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.file_upload",
                    "data_type": "string",
                    "column_name": "file_upload",
                    "column_order": 4,
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.full_scan",
                    "data_type": "string",
                    "column_name": "full_scan",
                    "column_order": 5,
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 2,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Sessionid: computer1-vm|1509568164801",
                        "Error from Cyber Triage server. Status Code: 401 Data from server: Unauthorized.",
                        "Error from Cyber Triage server. Status Code: 404 Data from server: The network path was not found."
                    ]
                },
                {
                    "data_path": "action_result.data.*.SessionId",
                    "data_type": "string",
                    "contains": [
                        "cyber triage session id"
                    ],
                    "column_name": "session_id",
                    "column_order": 1,
                    "example_values": [
                        "computer1-vm|1509568164801"
                    ]
                },
                {
                    "data_path": "action_result.summary.sessionID",
                    "data_type": "string",
                    "example_values": [
                        "computer1-vm|1509568164801"
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ],
    "pip_dependencies": {
        "wheel": [
            {
                "module": "backports.functools_lru_cache",
                "input_file": "wheels/backports.functools_lru_cache-1.6.4-py2.py3-none-any.whl"
            },
            {
                "module": "beautifulsoup4",
                "input_file": "wheels/beautifulsoup4-4.9.1-py2-none-any.whl"
            },
            {
                "module": "certifi",
                "input_file": "wheels/certifi-2021.10.8-py2.py3-none-any.whl"
            },
            {
                "module": "chardet",
                "input_file": "wheels/chardet-3.0.4-py2.py3-none-any.whl"
            },
            {
                "module": "idna",
                "input_file": "wheels/idna-2.10-py2.py3-none-any.whl"
            },
            {
                "module": "requests",
                "input_file": "wheels/requests-2.25.0-py2.py3-none-any.whl"
            },
            {
                "module": "soupsieve",
                "input_file": "wheels/soupsieve-1.9.6-py2.py3-none-any.whl"
            },
            {
                "module": "urllib3",
                "input_file": "wheels/urllib3-1.26.7-py2.py3-none-any.whl"
            }
        ]
    }
}